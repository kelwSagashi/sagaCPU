Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> blocks
Rule 2     blocks -> blocks block
Rule 3     blocks -> blocks label_block
Rule 4     blocks -> block
Rule 5     label_block -> label_colon label_instruction
Rule 6     label_instruction -> INDENT instructions DEDENT
Rule 7     label_colon -> LABEL COLON
Rule 8     block -> instructions
Rule 9     instructions -> instructions instruction
Rule 10    instructions -> instruction
Rule 11    instruction -> mov_registers
Rule 12    instruction -> mov_register_number
Rule 13    instruction -> mov_register_variable
Rule 14    instruction -> movp_register_pair_number
Rule 15    instruction -> movp_register_pair_variable
Rule 16    instruction -> movp_register_pair_register_pair
Rule 17    instruction -> movp_extended_register_pair_number
Rule 18    instruction -> movp_extended_register_pair_variable
Rule 19    instruction -> movp_extended_register_pair_register_pair
Rule 20    instruction -> mva_number
Rule 21    instruction -> lxi_register_number
Rule 22    instruction -> load_variable_registerpair
Rule 23    instruction -> load_address_registerpair
Rule 24    instruction -> store_variable_register
Rule 25    instruction -> store_address_register
Rule 26    instruction -> store_address_extendedregister
Rule 27    instruction -> store_variable_extendedregister
Rule 28    instruction -> arithmeticb
Rule 29    instruction -> out_format_var
Rule 30    instruction -> out_string
Rule 31    instruction -> out
Rule 32    instruction -> jump_label
Rule 33    instruction -> jump_address
Rule 34    instruction -> variable_byte
Rule 35    instruction -> variable_word
Rule 36    instruction -> variable_str
Rule 37    instruction -> empty
Rule 38    mov_registers -> MOV REGISTER COMMA REGISTER
Rule 39    mov_register_number -> MOV REGISTER COMMA HEX_NUMBER_BYTE
Rule 40    mov_register_variable -> MOV REGISTER COMMA VARIABLE
Rule 41    movp_register_pair_number -> MOVP REGISTERPAIR COMMA HEX_NUMBER_WORD
Rule 42    movp_register_pair_variable -> MOVP REGISTERPAIR COMMA VARIABLE
Rule 43    movp_register_pair_register_pair -> MOVP REGISTERPAIR COMMA REGISTERPAIR
Rule 44    movp_extended_register_pair_register_pair -> MOVP EXTENDEDREGISTER COMMA REGISTERPAIR
Rule 45    movp_extended_register_pair_variable -> MOVP EXTENDEDREGISTER COMMA VARIABLE
Rule 46    movp_extended_register_pair_number -> MOVP EXTENDEDREGISTER COMMA HEX_NUMBER_WORD
Rule 47    mva_number -> MVA HEX_NUMBER_BYTE
Rule 48    lxi_register_number -> LXI REGISTER COMMA HEX_NUMBER_WORD
Rule 49    load_variable_registerpair -> LOAD OPENBRACKET VARIABLE CLOSEBRACKET COMMA REGISTERPAIR
Rule 50    load_address_registerpair -> LOAD OPENBRACKET HEX_NUMBER_WORD CLOSEBRACKET COMMA REGISTERPAIR
Rule 51    store_variable_register -> STORE OPENBRACKET VARIABLE CLOSEBRACKET COMMA REGISTER
Rule 52    store_address_register -> STORE OPENBRACKET HEX_NUMBER_WORD CLOSEBRACKET COMMA REGISTER
Rule 53    store_variable_extendedregister -> STORE OPENBRACKET VARIABLE CLOSEBRACKET COMMA EXTENDEDREGISTER
Rule 54    store_address_estendedregister -> STORE OPENBRACKET HEX_NUMBER_WORD CLOSEBRACKET COMMA EXTENDEDREGISTER
Rule 55    arithmeticb -> ARITHMETICB REGISTER
Rule 56    out_format_var -> OUT OPENPARENTHESIS FORMAT COMMA VARIABLE CLOSEPARENTHESIS
Rule 57    out_string -> OUT OPENPARENTHESIS STRING CLOSEPARENTHESIS
Rule 58    out -> OUT OPENPARENTHESIS CLOSEPARENTHESIS
Rule 59    jump_label -> JUMP OPENBRACKET LABEL CLOSEBRACKET
Rule 60    jump_address -> JUMP OPENBRACKET HEX_NUMBER_WORD CLOSEBRACKET
Rule 61    variable_byte -> VARIABLE OPENTAG BYTE CLOSETAG COLON HEX_NUMBER_BYTE
Rule 62    variable_word -> VARIABLE OPENTAG WORD CLOSETAG COLON HEX_NUMBER_WORD
Rule 63    variable_str -> VARIABLE OPENTAG STR CLOSETAG COLON STRING
Rule 64    empty -> <empty>

Terminals, with rules where they appear

ARITHMETICB          : 55
BYTE                 : 61
CLOSEBRACKET         : 49 50 51 52 53 54 59 60
CLOSEPARENTHESIS     : 56 57 58
CLOSETAG             : 61 62 63
COLON                : 7 61 62 63
COMMA                : 38 39 40 41 42 43 44 45 46 48 49 50 51 52 53 54 56
COMMENT              : 
DEDENT               : 6
EXTENDEDREGISTER     : 44 45 46 53 54
FORMAT               : 56
HEX_NUMBER_BYTE      : 39 47 61
HEX_NUMBER_WORD      : 41 46 48 50 52 54 60 62
INDENT               : 6
JUMP                 : 59 60
LABEL                : 7 59
LOAD                 : 49 50
LXI                  : 48
MOV                  : 38 39 40
MOVP                 : 41 42 43 44 45 46
MVA                  : 47
OPENBRACKET          : 49 50 51 52 53 54 59 60
OPENPARENTHESIS      : 56 57 58
OPENTAG              : 61 62 63
OUT                  : 56 57 58
REGISTER             : 38 38 39 40 48 51 52 55
REGISTERPAIR         : 41 42 43 43 44 49 50
STORE                : 51 52 53 54
STR                  : 63
STRING               : 57 63
VARIABLE             : 40 42 45 49 51 53 56 61 62 63
WORD                 : 62
error                : 

Nonterminals, with rules where they appear

arithmeticb          : 28
block                : 2 4
blocks               : 1 2 3
empty                : 37
instruction          : 9 10
instructions         : 6 8 9
jump_address         : 33
jump_label           : 32
label_block          : 3
label_colon          : 5
label_instruction    : 5
load_address_registerpair : 23
load_variable_registerpair : 22
lxi_register_number  : 21
mov_register_number  : 12
mov_register_variable : 13
mov_registers        : 11
movp_extended_register_pair_number : 17
movp_extended_register_pair_register_pair : 19
movp_extended_register_pair_variable : 18
movp_register_pair_number : 14
movp_register_pair_register_pair : 16
movp_register_pair_variable : 15
mva_number           : 20
out                  : 31
out_format_var       : 29
out_string           : 30
program              : 0
store_address_estendedregister : 
store_address_extendedregister : 26
store_address_register : 25
store_variable_extendedregister : 27
store_variable_register : 24
variable_byte        : 34
variable_str         : 36
variable_word        : 35

